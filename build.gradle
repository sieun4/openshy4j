

buildscript { // 의존성 관리를 위한 설정
    ext { // build.gradle에서 사용하는 전역변수 설정
        springBootVersion = '2.3.3.RELEASE'
    }
    repositories { // 어떤 원격 저장소에서 받을지
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        //docker 실행 plugin
        classpath("com.palantir.gradle.docker:gradle-docker:0.25.0")
        classpath("com.palantir.gradle.docker:gradle-docker:0.25.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'com.palantir.docker-run'
group 'com.openshy4j'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies { // 프로젝트 개발에 필요한 의존성 선언
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compileOnly("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    //openstack4j-httpclient를 사용해야 image update 오류가 안남.  jersey는 오류 있음.
    //issue reported at : https://github.com/ContainX/openstack4j/issues/1168
    //compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-httpclient', version: '3.2.0'
    compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-resteasy', version: '3.2.0'
    //compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-okhttp', version: '3.2.0'
    //compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-http-connector', version: '3.2.0'
    //compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-connectors', version: '3.2.0', ext: 'pom'
    //compile group: 'org.pacesys.openstack4j.connectors', name: 'openstack4j-jersey2', version: '3.2.0'


    implementation 'org.pacesys:openstack4j:3.2.0'

    compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.5.1'

}


String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'gmldbd94'
String imageName = "${dockerHubUsernameProperty}/spring-boot-api-example:$version"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '8081:8081'
    clean true
}